brooklyn.catalog:
  version: "0.1.2-SNAPSHOT"
  description: |
    Entity that generates an '/etc/hosts' file containing the addresses
    of a group of entities that have the 'brooklyn_dns.enabled' config key set.
  publish:
    license_code: APACHE-2.0
    license_url: http://www.apache.org/licenses/LICENSE-2.0.txt

  items:
    - id: brooklyn-dns-etc-hosts-generator
      itemType: entity
      item:

        type: org.apache.brooklyn.entity.group.DynamicGroup
        name: Brooklyn DNS /etc/hosts Generation Group
        iconUrl: http://blog.webhostpython.com/wp-content/uploads/2015/09/dns.jpg
        id: brooklyn-dns-etc-hosts-generator

        brooklyn.parameters:
          - name: brooklyn_dns.domain
            label: "Domain Name"
            description: |
              The domain name suffix to use for generated hostnames
            default: "brooklyn.local"

          - name: brooklyn_dns.hosts.basename.sensor
            label: Basename sensor
            description: |
              The sensor giving the host basename on entities for which this provides name serving;
              the domain name is appended to the basename coming from that entity
            default: entity.id
            
          - name: brooklyn_dns.hosts.address.sensor
            label: IP address sensor
            description: |
              The sensor giving the IP address on entities for which this provides name serving;
              usually of the form 'host...address...', defaulting to the public IP address
              but if all nodes are in a private subnet 'host.subnet.address' may be better
            default: host.address

        brooklyn.config:
          dynamicgroup.entityfilter:
            $brooklyn:object:
              type: org.apache.brooklyn.core.entity.EntityPredicates
              factoryMethod.name: "configEqualTo"
              factoryMethod.args:
                - "brooklyn_dns.enabled"
                - true

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.MapAggregator
            brooklyn.config:
              uniqueTag: host-address-aggregator
              enricher.keySensor: $brooklyn:sensor($brooklyn:config("brooklyn_dns.hosts.basename.sensor"))
              enricher.valueSensor: $brooklyn:sensor($brooklyn:config("brooklyn_dns.hosts.address.sensor"))
              enricher.targetSensor: $brooklyn:sensor("host.map")
              enricher.aggregating.fromMembers: true
              enricher.aggregator.excludeBlank: true
          - type: org.apache.brooklyn.enricher.stock.Joiner
            brooklyn.config:
              uniqueTag: host-address-joiner
              enricher.sourceSensor: $brooklyn:sensor("host.map")
              enricher.targetSensor: $brooklyn:sensor("host.addresses")
              enricher.joiner.quote: false
              enricher.joiner.separator: " "
              enricher.joiner.keyValueSeparator: "="
              enricher.joiner.joinMapEntries: true

        brooklyn.policies:
          - type: org.apache.brooklyn.policy.InvokeEffectorOnSensorChange
            brooklyn.config:
              sensor: host.addresses
              effector: updateEtcHostsOnMembers
              
        brooklyn.initializers:
          - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
            brooklyn.config:
              name: updateEtcHostsOnMembers
              description: "Updates /etc/hosts file on all members"
              executionTarget: MEMBERS
              shell.env:
                HOST_ADDRESSES:
                  $brooklyn:entity("brooklyn-dns-etc-hosts-generator").attributeWhenReady("host.addresses")
                DOMAIN_NAME:
                  $brooklyn:entity("brooklyn-dns-etc-hosts-generator").config("brooklyn_dns.domain")
              command: |
                # use this strategy to prevent concurrent write conflicts
                ( sed '/# BEGIN_BROOKLYN_MANAGED_HOSTS/,/# END_BROOKLYN_MANAGED_HOSTS/d' /etc/hosts
                  echo "# BEGIN_BROOKLYN_MANAGED_HOSTS"
                  for host in ${HOST_ADDRESSES} ; do
                    name=$(echo ${host} | cut -d= -f1)
                    address=$(echo ${host} | cut -d= -f2)
                    echo "${address} ${name} ${name}.${DOMAIN_NAME}"
                  done
                  echo "# END_BROOKLYN_MANAGED_HOSTS" ) > /tmp/etc_hosts
                sudo mv /tmp/etc_hosts /etc/hosts
