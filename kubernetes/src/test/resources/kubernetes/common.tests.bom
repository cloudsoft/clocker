brooklyn.catalog:
  version: "2.1.0-SNAPSHOT" # CLOCKER_VERSION
  license_code: APACHE-2.0

  items:

  - id: test-case
    item:
      type: org.apache.brooklyn.test.framework.TestCase
      name: Tests

  - id: test-ssh
    item:
      type: org.apache.brooklyn.test.framework.TestSshCommand

  - id: test-ssh-succeeds
    item:
      type: org.apache.brooklyn.test.framework.TestSshCommand
      brooklyn.config:
        assertStatus:
          equals: 0

  - id: assert-sensor
    item:
      type: org.apache.brooklyn.test.framework.TestSensor
      brooklyn.config:
        defaultDisplayName:
          $brooklyn:formatString:
          - "Sensor %s"
          - $brooklyn:config("sensor")

  - id: assert-up
    item:
      type: assert-sensor
      sensor: service.isUp
      assert:
      - equals: true

  - id: assert-not-up
    item:
      type: assert-sensor
      name: service is not up
      sensor: service.isUp
      assert:
      - equals: false

  - id: assert-running
    item:
      type: assert-sensor
      name: service is running
      sensor: service.state
      assert:
      - matches: running

  - id: assert-stopped
    item:
      type: assert-sensor
      name: service is stopped
      sensor: service.state
      assert:
      - matches: stopped

  - id: assert-up-and-running-initial
    item:
      type: test-case
      name: service is up and running
      brooklyn.parameters:
      - name: timeout.initialStartup
        description: The timeout for provisioning, installing and launching the app-under-test.
        type: org.apache.brooklyn.util.time.Duration
        default: 1h
# TODO not working; does assert-up find the scopeRoot as that of assert-up item?!
#      brooklyn.config:
#        timeout: $brooklyn:scopeRoot().config("timeout.initialStartup")
      brooklyn.children:
      - type: assert-up
      - type: assert-running

  - id: assert-up-and-running
    item:
      type: test-case
      name: service is up and running
      brooklyn.children:
      - type: assert-up
      - type: assert-running

  - id: assert-failed
    item:
      type: org.apache.brooklyn.test.framework.TestSensor
      name: TEST [service.state] IS [on-fire]
      sensor: service.state
      assert:
      - matches: on-fire

  - id: assert-reachable
    item:
      type: org.apache.brooklyn.test.framework.TestEndpointReachable
      name: TEST endpoint reachable
      brooklyn.config:
        defaultDisplayName:
          $brooklyn:formatString:
          - "Endpoint %s"
          - $brooklyn:config("endpointSensor")

  - id: assert-process-running
    item:
      type: test-ssh-succeeds
      name: process is running
      brooklyn.parameters:
      - name: process.grep.name
        description: The name to grep for, to check if the process is running (e.g. "[p]ostgres")
        type: string
      brooklyn.config:
        command:
          $brooklyn:formatString:
          - "ps -ef | grep '%s' | grep -v 'dhclient'"
          - $brooklyn:config("process.grep.name")

  - id: assert-process-not-running
    item:
      type: test-ssh
      name: process is not running
      brooklyn.parameters:
      - name: process.grep.name
        description: The name to grep for, to check if the process is running (e.g. "[p]ostgres")
        type: string
      brooklyn.config:
        command:
          $brooklyn:formatString:
          - "ps -ef | grep '%s' | grep -v 'dhclient'"
          - $brooklyn:config("process.grep.name")
        assertStatus:
          equals: 1

  - id: invoke-effector
    item:
      type: org.apache.brooklyn.test.framework.TestEffector
      brooklyn.config:
        defaultDisplayName:
          $brooklyn:formatString:
          - "Invoke %s"
          - $brooklyn:config("effector")

  - id: invoke-stop-machine
    item:
      type: invoke-effector
      name: Invoke stop (including machine)
      effector: stop

  - id: test-stop
    item:
      type: invoke-effector
      name: Invoke stop
      effector: stop

  - id: invoke-stop-process
    item:
      type: invoke-effector
      name: Invoke stop (just process)
      effector: stop
      brooklyn.config:
        params:
          stopMachineMode: NEVER

  - id: invoke-start
    item:
      type: invoke-effector
      name: Invoke start
      effector: start

  - id: invoke-restart
    item:
      type: invoke-effector
      name: Invoke restart
      effector: restart

  - id: invoke-restart-process
    item:
      type: invoke-effector
      name: Invoke restart (just process)
      effector: restart
      params:
        restartMachine: false

  - id: invoke-restart-machine
    item:
      type: invoke-effector
      name: Invoke restart (including machine)
      effector: restart
      params:
        restartMachine: true

  - id: assert-reachable
    item:
      type: org.apache.brooklyn.test.framework.TestEndpointReachable
      name: TEST endpoint reachable

  ###
   # Invokes restart, and confirms the entity/process comes back up.
   #
   # Expects "process.grep.name" to be configured (e.g. with "[p]ostgres")
   ##
  - id: assert-restart-process
    item:
      type: test-case
      name: "Restart process, and confirm up"
      brooklyn.children:
      - type: invoke-restart-process
      - type: assert-up-and-running
      - type: assert-process-running

  ###
   # Invokes stop, and then restart. It confirms the entity/process was stopped and then
   # starts again.
   #
   # Expects "process.grep.name" to be configured (e.g. with "[p]ostgres")
   ##
  - id: assert-stop-and-restart-process
    item:
      type: test-case
      name: "Stop and restart process, confirming down then up"
      brooklyn.children:
      - type: invoke-stop-process
      - type: assert-not-up
      - type: assert-stopped
      - type: assert-process-not-running
      - type: invoke-restart-process
      - type: assert-up-and-running
      - type: assert-process-running
